name: Build, publish and deploy docker

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-testing:
    name: Deploy Testing
    needs: build-and-push-image
    runs-on: [self-hosted, Linux]
    environment:
      name: Testing
      url: https://timetable.api.test.profcomff.com/
    env:
      CONTAITER_NAME: com_profcomff_api_timetable_test
    permissions:
      packages: read

    steps:
      - name: Run docker container
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
          docker stop ${{ env.CONTAITER_NAME }} || true && docker rm ${{ env.CONTAITER_NAME }} || true

          docker run \
            --rm \
            --network=web \
            --env DB_DSN=${{ secrets.DB_DSN }} \
            --name ${{ env.CONTAITER_NAME }}_migration \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main \
            alembic upgrade head

          docker run \
            --detach \
            --restart on-failure:3 \
            --network=web \
            --env DB_DSN=${{ secrets.DB_DSN }} \
            --env GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}' \
            --name ${{ env.CONTAITER_NAME }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
